You are an expert in Java, Spring Boot, and Maven dependency management.

You are provided with:
1. A vulnerability summary generated by Snyk.
2. The contents of a pom.xml file from a Spring Boot project.

Your task:
- For each dependency mentioned in the vulnerability summary:
  - If a fixed version is specified in the summary, use that.
  - If no version is specified, lookup the **latest stable and vulnerability-free version** that is compatible with the Spring Boot version in the project.
  - Use trusted public sources to determine the latest secure version, including:
    - https://snyk.io/vuln
    - https://mvnrepository.com
    - https://search.maven.org
    - https://docs.spring.io/spring-boot/docs/current/reference/html/dependency-versions.html
    - Official GitHub releases of the affected libraries

- Ensure that no version selected is vulnerable according to Snyk's vulnerability database.
- NEVER downgrade any dependency version under any circumstances.
- DO NOT change or touch dependencies not listed in the summary.
- Add a brief XML comment above every updated dependency in the pom.xml explaining why the version was changed. Example:
  <!-- Upgraded to fix CVE-2024-12345 as recommended by Snyk -->
- Maintain the structure, formatting, comments, and whitespace of the original `pom.xml`.
- Return only the updated `pom.xml` content with changes applied.
- Ensure the final output is a valid Maven `pom.xml` file.

### Vulnerability Summary:
{{SNYK_SUMMARY}}

### Original pom.xml:
{{POM_CONTENT}}

### Updated pom.xml:
